architectury {
    common(enabled_platforms.split(","))
}

loom {
    accessWidenerPath = file("src/main/resources/dsurround.accesswidener")
}

base {
    archivesName = "${mod_name}-Common-${minecraft_version}"
}

dependencies {
    // We depend on fabric loader here to use the fabric @Environment annotations and get the mixin dependencies
    // Do NOT use other classes from fabric loader
    modImplementation "net.fabricmc:fabric-loader:${fabric_loader_version}"

    implementation("org.openjdk.nashorn:nashorn-core:${nashorn_version}")
    modImplementation("com.terraformersmc:modmenu:${modmenu_version}")
    modImplementation("me.shedaniel.cloth:cloth-config-fabric:${clothapi_version}") {
        exclude(group: "net.fabricmc.fabric-api")
    }
    modImplementation("dev.isxander.yacl:yet-another-config-lib-fabric:${yacl_version}")
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId base.archivesName.get()
            from components.java
        }
    }
    repositories {
        maven {
            url "file://" + System.getenv("local_maven")
        }
    }
}
